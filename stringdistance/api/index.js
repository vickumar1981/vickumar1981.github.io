Index.PACKAGES = {"com.github.vickumar1981.stringdistance.impl" : [{"name" : "com.github.vickumar1981.stringdistance.impl.AffineGap", "shortDescription" : "", "members_case class" : [{"label" : "min", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.AffineGap.min", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#min:Double", "kind" : "def"}, {"label" : "max", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.AffineGap.max", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#max:Double", "kind" : "def"}, {"label" : "value", "tail" : "(fromIndex: Double, toIndex: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.AffineGap.value", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#value(fromIndex:Double,toIndex:Double):Double", "kind" : "def"}, {"member" : "com.github.vickumar1981.stringdistance.impl.AffineGap#<init>", "error" : "unsupported entity"}, {"label" : "gapValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.AffineGap.gapValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#gapValue:Double", "kind" : "val"}, {"label" : "startValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.AffineGap.startValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#startValue:Double", "kind" : "val"}, {"label" : "misMatchValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.AffineGap.misMatchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#misMatchValue:Double", "kind" : "val"}, {"label" : "matchValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.AffineGap.matchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#matchValue:Double", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html", "kind" : "case class"}, {"name" : "com.github.vickumar1981.stringdistance.impl.ConstantGap", "shortDescription" : "", "members_case class" : [{"label" : "min", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap.min", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#min:Double", "kind" : "def"}, {"label" : "max", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap.max", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#max:Double", "kind" : "def"}, {"label" : "value", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap.value", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#value:Double", "kind" : "def"}, {"label" : "value", "tail" : "(fromIndex: Double, toIndex: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap.value", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#value(fromIndex:Double,toIndex:Double):Double", "kind" : "def"}, {"member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap#<init>", "error" : "unsupported entity"}, {"label" : "gapValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap.gapValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#gapValue:Double", "kind" : "val"}, {"label" : "misMatchValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap.misMatchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#misMatchValue:Double", "kind" : "val"}, {"label" : "matchValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap.matchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#matchValue:Double", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html", "kind" : "case class"}, {"name" : "com.github.vickumar1981.stringdistance.impl.Gap", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "min", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.Gap.min", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#min:Double", "kind" : "abstract def"}, {"label" : "max", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.Gap.max", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#max:Double", "kind" : "abstract def"}, {"label" : "value", "tail" : "(fromIndex: Double, toIndex: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.Gap.value", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#value(fromIndex:Double,toIndex:Double):Double", "kind" : "abstract def"}, {"label" : "gapValue", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.Gap.gapValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#gapValue:Double", "kind" : "abstract def"}, {"label" : "misMatchValue", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.Gap.misMatchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#misMatchValue:Double", "kind" : "abstract def"}, {"label" : "matchValue", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.Gap.matchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#matchValue:Double", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.vickumar1981.stringdistance.impl.LinearGap", "shortDescription" : "", "members_case class" : [{"label" : "min", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.LinearGap.min", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#min:Double", "kind" : "def"}, {"label" : "max", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.LinearGap.max", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#max:Double", "kind" : "def"}, {"label" : "value", "tail" : "(fromIndex: Double, toIndex: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.LinearGap.value", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#value(fromIndex:Double,toIndex:Double):Double", "kind" : "def"}, {"member" : "com.github.vickumar1981.stringdistance.impl.LinearGap#<init>", "error" : "unsupported entity"}, {"label" : "gapValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.LinearGap.gapValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#gapValue:Double", "kind" : "val"}, {"label" : "misMatchValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.LinearGap.misMatchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#misMatchValue:Double", "kind" : "val"}, {"label" : "matchValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.LinearGap.matchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#matchValue:Double", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html", "kind" : "case class"}], "com.github.vickumar1981.stringdistance" : [{"name" : "com.github.vickumar1981.stringdistance.ArrayDistance", "shortDescription" : "Main class to work with generic arrays, Array[T], analagous to StringDistance", "object" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html", "members_object" : [{"label" : "Tversky", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.Tversky", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#Tversky", "kind" : "object"}, {"label" : "SmithWatermanGotoh", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.SmithWatermanGotoh", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#SmithWatermanGotoh", "kind" : "object"}, {"label" : "SmithWaterman", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.SmithWaterman", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#SmithWaterman", "kind" : "object"}, {"label" : "Overlap", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.Overlap", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#Overlap", "kind" : "object"}, {"label" : "NGram", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.NGram", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#NGram", "kind" : "object"}, {"label" : "NeedlemanWunsch", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.NeedlemanWunsch", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#NeedlemanWunsch", "kind" : "object"}, {"label" : "LongestCommonSeq", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.LongestCommonSeq", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#LongestCommonSeq", "kind" : "object"}, {"label" : "Levenshtein", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.Levenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#Levenshtein", "kind" : "object"}, {"label" : "JaroWinkler", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.JaroWinkler", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#JaroWinkler", "kind" : "object"}, {"label" : "Jaro", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.Jaro", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#Jaro", "kind" : "object"}, {"label" : "Jaccard", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.Jaccard", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#Jaccard", "kind" : "object"}, {"label" : "Hamming", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.Hamming", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#Hamming", "kind" : "object"}, {"label" : "DiceCoefficient", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.DiceCoefficient", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#DiceCoefficient", "kind" : "object"}, {"label" : "Damerau", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.Damerau", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#Damerau", "kind" : "object"}, {"label" : "Cosine", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.Cosine", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#Cosine", "kind" : "object"}, {"label" : "ScoreFromDistanceMetric", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.ScoreFromDistanceMetric", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#ScoreFromDistanceMetricextendsAnyRef", "kind" : "sealed trait"}, {"label" : "WeightedDistanceMetric", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.WeightedDistanceMetric", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#WeightedDistanceMetric[T2]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "WeightedScoreMetric", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.WeightedScoreMetric", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#WeightedScoreMetric[T2]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "DistanceMetric", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.DistanceMetric", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#DistanceMetricextendsAnyRef", "kind" : "sealed trait"}, {"label" : "ScoreMetric", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.ScoreMetric", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#ScoreMetricextendsAnyRef", "kind" : "sealed trait"}, {"label" : "wrapScore", "tail" : "(arr1: Array[T], arr2: Array[T], score: () => Double): Double", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.wrapScore", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#wrapScore[T](arr1:Array[T],arr2:Array[T],score:()=>Double):Double", "kind" : "def"}, {"label" : "wrapDist", "tail" : "(arr1: Array[T], arr2: Array[T], dist: () => Int): Int", "member" : "com.github.vickumar1981.stringdistance.ArrayDistance.wrapDist", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#wrapDist[T](arr1:Array[T],arr2:Array[T],dist:()=>Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/ArrayDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.CosineAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the cosine similarity algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.DamerauLevenshteinAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the damerau levenshtein distance algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.DiceCoefficientAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the dice coefficient algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.DistanceAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "distance", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.DistanceAlgorithm.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#distance(s1:String,s2:String):Int", "kind" : "abstract def"}], "shortDescription" : "A type class to extend a distance method to StringMetricAlgorithm."}, {"name" : "com.github.vickumar1981.stringdistance.HammingAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the hamming distance algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.DamerauLevenshteinDistance", "shortDescription" : "Implicit definition of damerau levenshtein distance for DamerauLevenshteinAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html", "members_object" : [{"label" : "distance", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.DamerauLevenshteinDistance.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#distance(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.ScorableFromDistance.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "damerauLevenshtein", "tail" : "(a: Array[T], b: Array[T]): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LevenshteinDistanceImpl.damerauLevenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#damerauLevenshtein[T](a:Array[T],b:Array[T]):Int", "kind" : "def"}, {"label" : "levenshtein", "tail" : "(a: Array[T], b: Array[T]): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LevenshteinDistanceImpl.levenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#levenshtein[T](a:Array[T],b:Array[T]):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$DamerauLevenshteinDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.HammingDistance", "shortDescription" : "Implicit definition of hamming distance for HammingAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html", "members_object" : [{"label" : "distance", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.HammingDistance.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#distance(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.ScorableFromDistance.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "hamming", "tail" : "(s1: Array[T], s2: Array[T]): Int", "member" : "com.github.vickumar1981.stringdistance.impl.HammingImpl.hamming", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#hamming[T](s1:Array[T],s2:Array[T]):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$HammingDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.LevenshteinDistance", "shortDescription" : "Implicit definition of levenshtein distance for LevenshteinAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html", "members_object" : [{"label" : "distance", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.LevenshteinDistance.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#distance(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.ScorableFromDistance.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "damerauLevenshtein", "tail" : "(a: Array[T], b: Array[T]): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LevenshteinDistanceImpl.damerauLevenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#damerauLevenshtein[T](a:Array[T],b:Array[T]):Int", "kind" : "def"}, {"label" : "levenshtein", "tail" : "(a: Array[T], b: Array[T]): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LevenshteinDistanceImpl.levenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#levenshtein[T](a:Array[T],b:Array[T]):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LevenshteinDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.LongestCommonSeqDistance", "shortDescription" : "Implicit definition of longest common subsequence for CosineAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html", "members_object" : [{"label" : "distance", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.LongestCommonSeqDistance.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#distance(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "longestCommonSeq", "tail" : "(s1: Array[T], s2: Array[T]): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LongestCommonSeqImpl.longestCommonSeq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#longestCommonSeq[T](s1:Array[T],s2:Array[T]):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$LongestCommonSeqDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.NGramDistance", "shortDescription" : "Implicit definition of n-gram distance for NGramAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html", "members_object" : [{"label" : "distance", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.NGramDistance.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#distance(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "distance", "tail" : "(s1: String, s2: String, n: Int): Int", "member" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.NGramDistance.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#distance(s1:String,s2:String,n:Int):Int", "kind" : "def"}, {"label" : "nGramDist", "tail" : "(s1: Array[T], s2: Array[T], n: Int): Int", "member" : "com.github.vickumar1981.stringdistance.impl.NGramImpl.nGramDist", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#nGramDist[T](s1:Array[T],s2:Array[T],n:Int):Int", "kind" : "def"}, {"label" : "nGram", "tail" : "(s1: Array[T], s2: Array[T], n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.NGramImpl.nGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#nGram[T](s1:Array[T],s2:Array[T],n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: Array[T], s2: Array[T], n: Int)(err: => R)(success: (Int) => R)(fuzzy: (List[List[T]], List[List[T]], Int) => R): R", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#foldNGram[T,R](s1:Array[T],s2:Array[T],n:Int)(err:=>R)(success:Int=>R)(fuzzy:(List[List[T]],List[List[T]],Int)=>R):R", "kind" : "def"}, {"label" : "tokensAsJava", "tail" : "(a: Array[T], n: Int): List[List[T]]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokensAsJava", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#tokensAsJava[T](a:Array[T],n:Int):java.util.List[java.util.List[T]]", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: Array[T], n: Int): List[List[T]]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#tokenizeNGram[T](a:Array[T],n:Int):List[List[T]]", "kind" : "def"}, {"label" : "intersectLength", "tail" : "(): (List[List[T]], List[List[T]]) => Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#intersectLength[T]:(List[List[T]],List[List[T]])=>Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions$NGramDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.CosSimilarityScore", "shortDescription" : "Implicit definition of cosine similarity score for CosineAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.CosSimilarityScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "cosSimilarity", "tail" : "(s1: Array[T], s2: Array[T]): Double", "member" : "com.github.vickumar1981.stringdistance.impl.CosSimilarityImpl.cosSimilarity", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#cosSimilarity[T](s1:Array[T],s2:Array[T]):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$CosSimilarityScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.DiceCoefficientScore", "shortDescription" : "Implicit definition of dice coefficient score for DiceCoefficientAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.DiceCoefficientScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "diceCoefficient", "tail" : "(s1: Array[T], s2: Array[T]): Double", "member" : "com.github.vickumar1981.stringdistance.impl.DiceCoefficientImpl.diceCoefficient", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#diceCoefficient[T](s1:Array[T],s2:Array[T]):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$DiceCoefficientScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.JaccardScore", "shortDescription" : "Implicit definition of jaccard score for JaccardAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.JaccardScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "score", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.JaccardScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#score(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "tversky", "tail" : "(s1: Array[T], s2: Array[T], n: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaccardImpl.tversky", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#tversky[T](s1:Array[T],s2:Array[T],n:Double):Double", "kind" : "def"}, {"label" : "jaccard", "tail" : "(s1: Array[T], s2: Array[T], n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaccardImpl.jaccard", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#jaccard[T](s1:Array[T],s2:Array[T],n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: Array[T], s2: Array[T], n: Int)(err: => R)(success: (Int) => R)(fuzzy: (List[List[T]], List[List[T]], Int) => R): R", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#foldNGram[T,R](s1:Array[T],s2:Array[T],n:Int)(err:=>R)(success:Int=>R)(fuzzy:(List[List[T]],List[List[T]],Int)=>R):R", "kind" : "def"}, {"label" : "tokensAsJava", "tail" : "(a: Array[T], n: Int): List[List[T]]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokensAsJava", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#tokensAsJava[T](a:Array[T],n:Int):java.util.List[java.util.List[T]]", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: Array[T], n: Int): List[List[T]]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#tokenizeNGram[T](a:Array[T],n:Int):List[List[T]]", "kind" : "def"}, {"label" : "intersectLength", "tail" : "(): (List[List[T]], List[List[T]]) => Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#intersectLength[T]:(List[List[T]],List[List[T]])=>Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaccardScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.JaroScore", "shortDescription" : "Implicit definition of jaro score for JaroAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.JaroScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "jaro", "tail" : "(s1: Array[T], s2: Array[T]): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaroImpl.jaro", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#jaro[T](s1:Array[T],s2:Array[T]):Double", "kind" : "def"}, {"label" : "jaroWinkler", "tail" : "(s1: Array[T], s2: Array[T], weight: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaroImpl.jaroWinkler", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#jaroWinkler[T](s1:Array[T],s2:Array[T],weight:Double):Double", "kind" : "def"}, {"label" : "getCommonChars", "tail" : "(s1: List[T], s2: List[T], halfLen: Int): List[T]", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.getCommonChars", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#getCommonChars[T](s1:List[T],s2:List[T],halfLen:Int):List[T]", "kind" : "def"}, {"label" : "minStartPrefix", "tail" : "(s1: Array[T], s2: Array[T], minPrefixLen: Int): Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.minStartPrefix", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#minStartPrefix[T](s1:Array[T],s2:Array[T],minPrefixLen:Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.JaroWinklerScore", "shortDescription" : "Implicit definition of jaro winkler score for JaroWinklerAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.JaroWinklerScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "score", "tail" : "(s1: String, s2: String, weight: Double): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.JaroWinklerScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#score(s1:String,s2:String,weight:Double):Double", "kind" : "def"}, {"label" : "jaro", "tail" : "(s1: Array[T], s2: Array[T]): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaroImpl.jaro", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#jaro[T](s1:Array[T],s2:Array[T]):Double", "kind" : "def"}, {"label" : "jaroWinkler", "tail" : "(s1: Array[T], s2: Array[T], weight: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaroImpl.jaroWinkler", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#jaroWinkler[T](s1:Array[T],s2:Array[T],weight:Double):Double", "kind" : "def"}, {"label" : "getCommonChars", "tail" : "(s1: List[T], s2: List[T], halfLen: Int): List[T]", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.getCommonChars", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#getCommonChars[T](s1:List[T],s2:List[T],halfLen:Int):List[T]", "kind" : "def"}, {"label" : "minStartPrefix", "tail" : "(s1: Array[T], s2: Array[T], minPrefixLen: Int): Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.minStartPrefix", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#minStartPrefix[T](s1:Array[T],s2:Array[T],minPrefixLen:Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$JaroWinklerScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.NeedlemanWunschScore", "shortDescription" : "Implicit definition of needleman wunsch score for NeedlemanWunschAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.NeedlemanWunschScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "score", "tail" : "(s1: String, s2: String, gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.NeedlemanWunschScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#score(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "needleman", "tail" : "(s1: Array[T], s2: Array[T], gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.NeedlemanWunschImpl.needleman", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#needleman[T](s1:Array[T],s2:Array[T],gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "subst", "tail" : "(a: Array[T], aIndex: Int, b: Array[T], bIndex: Int, gap: Gap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.GapSubstitution.subst", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#subst[T](a:Array[T],aIndex:Int,b:Array[T],bIndex:Int,gap:com.github.vickumar1981.stringdistance.impl.Gap):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NeedlemanWunschScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.NGramScore", "shortDescription" : "Implicit definition of n-gram score for NGramAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.NGramScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "score", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.NGramScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#score(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "nGramDist", "tail" : "(s1: Array[T], s2: Array[T], n: Int): Int", "member" : "com.github.vickumar1981.stringdistance.impl.NGramImpl.nGramDist", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#nGramDist[T](s1:Array[T],s2:Array[T],n:Int):Int", "kind" : "def"}, {"label" : "nGram", "tail" : "(s1: Array[T], s2: Array[T], n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.NGramImpl.nGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#nGram[T](s1:Array[T],s2:Array[T],n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: Array[T], s2: Array[T], n: Int)(err: => R)(success: (Int) => R)(fuzzy: (List[List[T]], List[List[T]], Int) => R): R", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#foldNGram[T,R](s1:Array[T],s2:Array[T],n:Int)(err:=>R)(success:Int=>R)(fuzzy:(List[List[T]],List[List[T]],Int)=>R):R", "kind" : "def"}, {"label" : "tokensAsJava", "tail" : "(a: Array[T], n: Int): List[List[T]]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokensAsJava", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#tokensAsJava[T](a:Array[T],n:Int):java.util.List[java.util.List[T]]", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: Array[T], n: Int): List[List[T]]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#tokenizeNGram[T](a:Array[T],n:Int):List[List[T]]", "kind" : "def"}, {"label" : "intersectLength", "tail" : "(): (List[List[T]], List[List[T]]) => Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#intersectLength[T]:(List[List[T]],List[List[T]])=>Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$NGramScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.OverlapScore", "shortDescription" : "Implicit definition of overlap score for OverlapAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.OverlapScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "score", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.OverlapScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#score(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "overlap", "tail" : "(s1: Array[T], s2: Array[T], n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.OverlapImpl.overlap", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#overlap[T](s1:Array[T],s2:Array[T],n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: Array[T], s2: Array[T], n: Int)(err: => R)(success: (Int) => R)(fuzzy: (List[List[T]], List[List[T]], Int) => R): R", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#foldNGram[T,R](s1:Array[T],s2:Array[T],n:Int)(err:=>R)(success:Int=>R)(fuzzy:(List[List[T]],List[List[T]],Int)=>R):R", "kind" : "def"}, {"label" : "tokensAsJava", "tail" : "(a: Array[T], n: Int): List[List[T]]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokensAsJava", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#tokensAsJava[T](a:Array[T],n:Int):java.util.List[java.util.List[T]]", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: Array[T], n: Int): List[List[T]]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#tokenizeNGram[T](a:Array[T],n:Int):List[List[T]]", "kind" : "def"}, {"label" : "intersectLength", "tail" : "(): (List[List[T]], List[List[T]]) => Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#intersectLength[T]:(List[List[T]],List[List[T]])=>Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$OverlapScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.SmithWatermanGotohScore", "shortDescription" : "Implicit definition of smith waterman gotoh score for SmithWatermanGotohAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.SmithWatermanGotohScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "score", "tail" : "(s1: String, s2: String, gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.SmithWatermanGotohScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#score(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "smithWatermanGotoh", "tail" : "(s1: Array[T], s2: Array[T], gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.SmithWatermanImpl.smithWatermanGotoh", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#smithWatermanGotoh[T](s1:Array[T],s2:Array[T],gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "smithWaterman", "tail" : "(s1: Array[T], s2: Array[T], gap: Gap, windowSize: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.SmithWatermanImpl.smithWaterman", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#smithWaterman[T](s1:Array[T],s2:Array[T],gap:com.github.vickumar1981.stringdistance.impl.Gap,windowSize:Int):Double", "kind" : "def"}, {"label" : "subst", "tail" : "(a: Array[T], aIndex: Int, b: Array[T], bIndex: Int, gap: Gap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.GapSubstitution.subst", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#subst[T](a:Array[T],aIndex:Int,b:Array[T],bIndex:Int,gap:com.github.vickumar1981.stringdistance.impl.Gap):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanGotohScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.SmithWatermanScore", "shortDescription" : "Implicit definition of smith waterman score for SmithWatermanAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.SmithWatermanScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "score", "tail" : "(s1: String, s2: String, gapAndWindowSize: (Gap, Int)): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.SmithWatermanScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#score(s1:String,s2:String,gapAndWindowSize:(com.github.vickumar1981.stringdistance.impl.Gap,Int)):Double", "kind" : "def"}, {"label" : "smithWatermanGotoh", "tail" : "(s1: Array[T], s2: Array[T], gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.SmithWatermanImpl.smithWatermanGotoh", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#smithWatermanGotoh[T](s1:Array[T],s2:Array[T],gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "smithWaterman", "tail" : "(s1: Array[T], s2: Array[T], gap: Gap, windowSize: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.SmithWatermanImpl.smithWaterman", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#smithWaterman[T](s1:Array[T],s2:Array[T],gap:com.github.vickumar1981.stringdistance.impl.Gap,windowSize:Int):Double", "kind" : "def"}, {"label" : "subst", "tail" : "(a: Array[T], aIndex: Int, b: Array[T], bIndex: Int, gap: Gap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.GapSubstitution.subst", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#subst[T](a:Array[T],aIndex:Int,b:Array[T],bIndex:Int,gap:com.github.vickumar1981.stringdistance.impl.Gap):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$SmithWatermanScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.TverskyScore", "shortDescription" : "Implicit definition of tversky score for TverskyAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.TverskyScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "score", "tail" : "(s1: String, s2: String, n: Double): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.TverskyScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#score(s1:String,s2:String,n:Double):Double", "kind" : "def"}, {"label" : "tversky", "tail" : "(s1: Array[T], s2: Array[T], n: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaccardImpl.tversky", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#tversky[T](s1:Array[T],s2:Array[T],n:Double):Double", "kind" : "def"}, {"label" : "jaccard", "tail" : "(s1: Array[T], s2: Array[T], n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaccardImpl.jaccard", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#jaccard[T](s1:Array[T],s2:Array[T],n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: Array[T], s2: Array[T], n: Int)(err: => R)(success: (Int) => R)(fuzzy: (List[List[T]], List[List[T]], Int) => R): R", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#foldNGram[T,R](s1:Array[T],s2:Array[T],n:Int)(err:=>R)(success:Int=>R)(fuzzy:(List[List[T]],List[List[T]],Int)=>R):R", "kind" : "def"}, {"label" : "tokensAsJava", "tail" : "(a: Array[T], n: Int): List[List[T]]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokensAsJava", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#tokensAsJava[T](a:Array[T],n:Int):java.util.List[java.util.List[T]]", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: Array[T], n: Int): List[List[T]]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#tokenizeNGram[T](a:Array[T],n:Int):List[List[T]]", "kind" : "def"}, {"label" : "intersectLength", "tail" : "(): (List[List[T]], List[List[T]]) => Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#intersectLength[T]:(List[List[T]],List[List[T]])=>Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions$TverskyScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.SoundDefinitions.MetaphoneScore", "shortDescription" : "Implicit definition of metaphone score for MetaphoneAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.implicits.SoundDefinitions.MetaphoneScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#score(s1:String,s2:String):Boolean", "kind" : "def"}, {"label" : "metaphone", "tail" : "(s1: String, s2: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.impl.sound.MetaphoneImpl.metaphone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#metaphone(s1:String,s2:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$MetaphoneScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.SoundDefinitions.SoundexScore", "shortDescription" : "Implicit definition of soundex score for SoundexAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.implicits.SoundDefinitions.SoundexScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#score(s1:String,s2:String):Boolean", "kind" : "def"}, {"label" : "soundex", "tail" : "(a: String, b: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.impl.sound.SoundexImpl.soundex", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#soundex(a:String,b:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions$SoundexScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.JaccardAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for a jaccard similarity algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.JaroAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the jaro similarity algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.JaroWinklerAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the jaro winkler algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.LevenshteinAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the levenshtein distance algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.LongestCommonSeqAlorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the longest common subsequence algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.MetaphoneAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the metaphone algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.MetaphoneImplWrapper", "shortDescription" : "Java Wrapper for metaphone similarity.", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.MetaphoneImplWrapper#<init>", "error" : "unsupported entity"}, {"label" : "metaphone", "tail" : "(s1: String, s2: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.impl.sound.MetaphoneImpl.metaphone", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#metaphone(s1:String,s2:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.NeedlemanWunschAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the needleman wunsch similarity algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.NGramAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the n-gram similarity algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.OverlapAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the overlap similarity algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.ScorableFromDistance", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html", "kind" : "trait", "members_trait" : [{"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.ScorableFromDistance.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A mix-in trait to extend a score method using the distance methodto StringMetricAlgorithm."}, {"name" : "com.github.vickumar1981.stringdistance.ScoringAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.ScoringAlgorithm.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#score(s1:String,s2:String):Double", "kind" : "abstract def"}], "shortDescription" : "A type class to extend a score method to StringMetricAlgorithm."}, {"name" : "com.github.vickumar1981.stringdistance.SmithWatermanAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the smith waterman similarity algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.SmithWatermanGotohAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the smith waterman gotoh similarity algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.SoundexAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the soundex similarity algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.SoundexImplWrapper", "shortDescription" : "Java Wrapper for soundex similarity.", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.SoundexImplWrapper#<init>", "error" : "unsupported entity"}, {"label" : "soundex", "tail" : "(a: String, b: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.impl.sound.SoundexImpl.soundex", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#soundex(a:String,b:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.SoundScoringAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "score", "tail" : "(s1: String, s2: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.SoundScoringAlgorithm.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#score(s1:String,s2:String):Boolean", "kind" : "abstract def"}], "shortDescription" : "A type class to extend a sound score method to StringMetricAlgorithm."}, {"name" : "com.github.vickumar1981.stringdistance.StringConverter", "shortDescription" : "Object to extend operations to the String class.", "object" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html", "members_object" : [{"label" : "StringToStringDistanceConverter", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringConverter.StringToStringDistanceConverter", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#StringToStringDistanceConverterextendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.StringDistance", "shortDescription" : "Main class to organize functionality of different string distance algorithms", "object" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html", "members_object" : [{"label" : "Tversky", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Tversky", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Tversky", "kind" : "object"}, {"label" : "SmithWatermanGotoh", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.SmithWatermanGotoh", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#SmithWatermanGotoh", "kind" : "object"}, {"label" : "SmithWaterman", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.SmithWaterman", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#SmithWaterman", "kind" : "object"}, {"label" : "Overlap", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Overlap", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Overlap", "kind" : "object"}, {"label" : "NGram", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.NGram", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#NGram", "kind" : "object"}, {"label" : "NeedlemanWunsch", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.NeedlemanWunsch", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#NeedlemanWunsch", "kind" : "object"}, {"label" : "LongestCommonSeq", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.LongestCommonSeq", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#LongestCommonSeq", "kind" : "object"}, {"label" : "Levenshtein", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Levenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Levenshtein", "kind" : "object"}, {"label" : "JaroWinkler", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.JaroWinkler", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#JaroWinkler", "kind" : "object"}, {"label" : "Jaro", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Jaro", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Jaro", "kind" : "object"}, {"label" : "Jaccard", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Jaccard", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Jaccard", "kind" : "object"}, {"label" : "Hamming", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Hamming", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Hamming", "kind" : "object"}, {"label" : "DiceCoefficient", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.DiceCoefficient", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#DiceCoefficient", "kind" : "object"}, {"label" : "Damerau", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Damerau", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Damerau", "kind" : "object"}, {"label" : "Cosine", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Cosine", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Cosine", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.StringMetric", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html", "kind" : "trait", "members_trait" : [{"label" : "score", "tail" : "(s1: String, s2: String)(algo: ScoringAlgorithm[A]): Double", "member" : "com.github.vickumar1981.stringdistance.StringMetric.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#score(s1:String,s2:String)(implicitalgo:com.github.vickumar1981.stringdistance.package.ScoringAlgorithm[A]):Double", "kind" : "def"}, {"label" : "distance", "tail" : "(s1: String, s2: String)(algo: DistanceAlgorithm[A]): Int", "member" : "com.github.vickumar1981.stringdistance.StringMetric.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#distance(s1:String,s2:String)(implicitalgo:com.github.vickumar1981.stringdistance.package.DistanceAlgorithm[A]):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Defines implementation for StringMetricAlgorithm by addingimplicit definitions from DistanceAlgorithm, ScoringAlgorithm,WeightedDistanceAlgorithm, or WeightedScoringAlgorithm"}, {"name" : "com.github.vickumar1981.stringdistance.StringMetricAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the string metric algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.StringSound", "shortDescription" : "Main class to organize functionality of different phonetic\/sound string algorithms", "object" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html", "members_object" : [{"label" : "Soundex", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringSound.Soundex", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#Soundex", "kind" : "object"}, {"label" : "Metaphone", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringSound.Metaphone", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#Metaphone", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.StringSoundMetric", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html", "kind" : "trait", "members_trait" : [{"label" : "score", "tail" : "(s1: String, s2: String)(algo: SoundScoringAlgorithm[A]): Boolean", "member" : "com.github.vickumar1981.stringdistance.StringSoundMetric.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#score(s1:String,s2:String)(implicitalgo:com.github.vickumar1981.stringdistance.package.SoundScoringAlgorithm[A]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.vickumar1981.stringdistance.TverskyAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the tversky similarity algorithm."}, {"name" : "com.github.vickumar1981.stringdistance.WeightedDistanceAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "distance", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.WeightedDistanceAlgorithm.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#distance(s1:String,s2:String):Int", "kind" : "abstract def"}, {"label" : "distance", "tail" : "(s1: String, s2: String, weight: B): Int", "member" : "com.github.vickumar1981.stringdistance.WeightedDistanceAlgorithm.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#distance(s1:String,s2:String,weight:B):Int", "kind" : "abstract def"}], "shortDescription" : "A type class to extend a distance method with a 2nd typed parameterto StringMetricAlgorithm."}, {"name" : "com.github.vickumar1981.stringdistance.WeightedScoringAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.WeightedScoringAlgorithm.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#score(s1:String,s2:String):Double", "kind" : "abstract def"}, {"label" : "score", "tail" : "(s1: String, s2: String, weight: B): Double", "member" : "com.github.vickumar1981.stringdistance.WeightedScoringAlgorithm.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#score(s1:String,s2:String,weight:B):Double", "kind" : "abstract def"}], "shortDescription" : "A type class to extend a score method with a 2nd typed parameterto StringMetricAlgorithm."}, {"name" : "com.github.vickumar1981.stringdistance.WeightedStringMetric", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html", "kind" : "trait", "members_trait" : [{"label" : "score", "tail" : "(s1: String, s2: String)(algo: WeightedScoringAlgorithm[A, B]): Double", "member" : "com.github.vickumar1981.stringdistance.WeightedStringMetric.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#score(s1:String,s2:String)(implicitalgo:com.github.vickumar1981.stringdistance.package.WeightedScoringAlgorithm[A,B]):Double", "kind" : "def"}, {"label" : "score", "tail" : "(s1: String, s2: String, weight: B)(algo: WeightedScoringAlgorithm[A, B]): Double", "member" : "com.github.vickumar1981.stringdistance.WeightedStringMetric.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#score(s1:String,s2:String,weight:B)(implicitalgo:com.github.vickumar1981.stringdistance.package.WeightedScoringAlgorithm[A,B]):Double", "kind" : "def"}, {"label" : "distance", "tail" : "(s1: String, s2: String)(algo: WeightedDistanceAlgorithm[A, B]): Int", "member" : "com.github.vickumar1981.stringdistance.WeightedStringMetric.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#distance(s1:String,s2:String)(implicitalgo:com.github.vickumar1981.stringdistance.package.WeightedDistanceAlgorithm[A,B]):Int", "kind" : "def"}, {"label" : "distance", "tail" : "(s1: String, s2: String, weight: B)(algo: WeightedDistanceAlgorithm[A, B]): Int", "member" : "com.github.vickumar1981.stringdistance.WeightedStringMetric.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#distance(s1:String,s2:String,weight:B)(implicitalgo:com.github.vickumar1981.stringdistance.package.WeightedDistanceAlgorithm[A,B]):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "com.github.vickumar1981.stringdistance.implicits" : [{"name" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions", "trait" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html", "kind" : "trait", "members_trait" : [{"label" : "NGramDistance", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.NGramDistance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#NGramDistance", "kind" : "implicit object"}, {"label" : "LongestCommonSeqDistance", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.LongestCommonSeqDistance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#LongestCommonSeqDistance", "kind" : "implicit object"}, {"label" : "LevenshteinDistance", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.LevenshteinDistance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#LevenshteinDistance", "kind" : "implicit object"}, {"label" : "HammingDistance", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.HammingDistance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#HammingDistance", "kind" : "implicit object"}, {"label" : "DamerauLevenshteinDistance", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.DistanceDefinitions.DamerauLevenshteinDistance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#DamerauLevenshteinDistance", "kind" : "implicit object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/DistanceDefinitions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions", "trait" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html", "kind" : "trait", "members_trait" : [{"label" : "TverskyScore", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.TverskyScore", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#TverskyScore", "kind" : "implicit object"}, {"label" : "SmithWatermanGotohScore", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.SmithWatermanGotohScore", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#SmithWatermanGotohScore", "kind" : "implicit object"}, {"label" : "SmithWatermanScore", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.SmithWatermanScore", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#SmithWatermanScore", "kind" : "implicit object"}, {"label" : "OverlapScore", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.OverlapScore", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#OverlapScore", "kind" : "implicit object"}, {"label" : "NGramScore", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.NGramScore", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#NGramScore", "kind" : "implicit object"}, {"label" : "NeedlemanWunschScore", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.NeedlemanWunschScore", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#NeedlemanWunschScore", "kind" : "implicit object"}, {"label" : "JaroWinklerScore", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.JaroWinklerScore", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#JaroWinklerScore", "kind" : "implicit object"}, {"label" : "JaroScore", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.JaroScore", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#JaroScore", "kind" : "implicit object"}, {"label" : "JaccardScore", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.JaccardScore", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#JaccardScore", "kind" : "implicit object"}, {"label" : "DiceCoefficientScore", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.DiceCoefficientScore", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#DiceCoefficientScore", "kind" : "implicit object"}, {"label" : "CosSimilarityScore", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.ScoreDefinitions.CosSimilarityScore", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#CosSimilarityScore", "kind" : "implicit object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/ScoreDefinitions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.vickumar1981.stringdistance.implicits.SoundDefinitions", "trait" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html", "kind" : "trait", "members_trait" : [{"label" : "SoundexScore", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.SoundDefinitions.SoundexScore", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#SoundexScore", "kind" : "implicit object"}, {"label" : "MetaphoneScore", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.implicits.SoundDefinitions.MetaphoneScore", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#MetaphoneScore", "kind" : "implicit object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/SoundDefinitions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "com.github.vickumar1981" : [], "sd_example" : [{"name" : "sd_example.Ch", "shortDescription" : "", "members_class" : [{"label" : "equals", "tail" : "(o: AnyRef): Boolean", "member" : "sd_example.Ch.equals", "link" : "sd_example\/Ch.html#equals(o:Object):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "sd_example\/Ch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "sd_example\/Ch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "sd_example\/Ch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "sd_example\/Ch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "sd_example\/Ch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "sd_example\/Ch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "sd_example\/Ch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "sd_example\/Ch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "sd_example\/Ch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "sd_example\/Ch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "sd_example\/Ch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "sd_example\/Ch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "sd_example\/Ch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "sd_example\/Ch.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "sd_example\/Ch.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "sd_example\/Ch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "sd_example\/Ch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "sd_example\/Ch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "sd_example\/Ch.html", "kind" : "class"}, {"name" : "sd_example.SdJavaExample", "shortDescription" : "", "members_class" : [{"member" : "sd_example.SdJavaExample#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "sd_example\/SdJavaExample.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "sd_example\/SdJavaExample.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "sd_example\/SdJavaExample.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "sd_example\/SdJavaExample.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "sd_example\/SdJavaExample.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "sd_example\/SdJavaExample.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "sd_example\/SdJavaExample.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "sd_example\/SdJavaExample.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "sd_example\/SdJavaExample.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "sd_example\/SdJavaExample.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "sd_example\/SdJavaExample.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "sd_example\/SdJavaExample.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "sd_example\/SdJavaExample.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "sd_example\/SdJavaExample.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "sd_example\/SdJavaExample.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "sd_example\/SdJavaExample.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "sd_example\/SdJavaExample.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "sd_example\/SdJavaExample.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "sd_example\/SdJavaExample.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "sd_example\/SdJavaExample.html", "kind" : "class"}], "com.github.vickumar1981.stringdistance.util" : [{"name" : "com.github.vickumar1981.stringdistance.util.ArrayDistance", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.ArrayDistance#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/ArrayDistance.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.StringDistance", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.StringDistance#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.StringSound", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.StringSound#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html", "kind" : "class"}], "com" : [], "com.github" : []};