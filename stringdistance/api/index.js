Index.PACKAGES = {"com.github.vickumar1981.stringdistance.impl" : [{"name" : "com.github.vickumar1981.stringdistance.impl.AffineGap", "shortDescription" : "", "members_case class" : [{"label" : "min", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.AffineGap.min", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#min:Double", "kind" : "def"}, {"label" : "max", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.AffineGap.max", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#max:Double", "kind" : "def"}, {"label" : "value", "tail" : "(fromIndex: Double, toIndex: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.AffineGap.value", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#value(fromIndex:Double,toIndex:Double):Double", "kind" : "def"}, {"member" : "com.github.vickumar1981.stringdistance.impl.AffineGap#<init>", "error" : "unsupported entity"}, {"label" : "gapValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.AffineGap.gapValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#gapValue:Double", "kind" : "val"}, {"label" : "startValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.AffineGap.startValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#startValue:Double", "kind" : "val"}, {"label" : "misMatchValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.AffineGap.misMatchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#misMatchValue:Double", "kind" : "val"}, {"label" : "matchValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.AffineGap.matchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#matchValue:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/vickumar1981\/stringdistance\/impl\/AffineGap.html", "kind" : "case class"}, {"name" : "com.github.vickumar1981.stringdistance.impl.ConstantGap", "shortDescription" : "", "members_case class" : [{"label" : "min", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap.min", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#min:Double", "kind" : "def"}, {"label" : "max", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap.max", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#max:Double", "kind" : "def"}, {"label" : "value", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap.value", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#value:Double", "kind" : "def"}, {"label" : "value", "tail" : "(fromIndex: Double, toIndex: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap.value", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#value(fromIndex:Double,toIndex:Double):Double", "kind" : "def"}, {"member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap#<init>", "error" : "unsupported entity"}, {"label" : "gapValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap.gapValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#gapValue:Double", "kind" : "val"}, {"label" : "misMatchValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap.misMatchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#misMatchValue:Double", "kind" : "val"}, {"label" : "matchValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.ConstantGap.matchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#matchValue:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/vickumar1981\/stringdistance\/impl\/ConstantGap.html", "kind" : "case class"}, {"name" : "com.github.vickumar1981.stringdistance.impl.CosSimilarityImpl", "members_trait" : [{"label" : "cosSimilarity", "tail" : "(s1: String, s2: String, splitOn: String): Double", "member" : "com.github.vickumar1981.stringdistance.impl.CosSimilarityImpl.cosSimilarity", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#cosSimilarity(s1:String,s2:String,splitOn:String):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/CosSimilarityImpl.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.impl.DiceCoefficientImpl", "members_trait" : [{"label" : "diceCoefficient", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.impl.DiceCoefficientImpl.diceCoefficient", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#diceCoefficient(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/DiceCoefficientImpl.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.impl.Gap", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "min", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.Gap.min", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#min:Double", "kind" : "abstract def"}, {"label" : "max", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.Gap.max", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#max:Double", "kind" : "abstract def"}, {"label" : "value", "tail" : "(fromIndex: Double, toIndex: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.Gap.value", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#value(fromIndex:Double,toIndex:Double):Double", "kind" : "abstract def"}, {"label" : "gapValue", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.Gap.gapValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#gapValue:Double", "kind" : "abstract def"}, {"label" : "misMatchValue", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.Gap.misMatchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#misMatchValue:Double", "kind" : "abstract def"}, {"label" : "matchValue", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.Gap.matchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html#matchValue:Double", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/Gap.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.impl.GapSubstitution", "members_trait" : [{"label" : "subst", "tail" : "(a: String, aIndex: Int, b: String, bIndex: Int, gap: Gap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.GapSubstitution.subst", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#subst(a:String,aIndex:Int,b:String,bIndex:Int,gap:com.github.vickumar1981.stringdistance.impl.Gap):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/GapSubstitution.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.impl.HammingImpl", "members_trait" : [{"label" : "hamming", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.HammingImpl.hamming", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#hamming(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/HammingImpl.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.impl.JaccardImpl", "members_trait" : [{"label" : "tversky", "tail" : "(s1: String, s2: String, n: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaccardImpl.tversky", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#tversky(s1:String,s2:String,n:Double):Double", "kind" : "def"}, {"label" : "jaccard", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaccardImpl.jaccard", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#jaccard(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: String, s2: String, n: Int)(err: ⇒ T)(success: (Int) ⇒ T)(fuzzy: (Seq[String], Seq[String], Int) ⇒ T): T", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#foldNGram[T](s1:String,s2:String,n:Int)(err:=>T)(success:Int=>T)(fuzzy:(Seq[String],Seq[String],Int)=>T):T", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: String, n: Int): Array[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#tokenizeNGram(a:String,n:Int):Array[String]", "kind" : "def"}, {"label" : "intersectLength", "tail" : ": (Array[String], Array[String]) ⇒ Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#intersectLength:(Array[String],Array[String])=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaccardImpl.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.impl.JaroImpl", "members_trait" : [{"label" : "jaro", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaroImpl.jaro", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#jaro(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "jaroWinkler", "tail" : "(s1: String, s2: String, weight: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaroImpl.jaroWinkler", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#jaroWinkler(s1:String,s2:String,weight:Double):Double", "kind" : "def"}, {"label" : "getCommonChars", "tail" : "(s1: String, s2: String, halfLen: Int): String", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.getCommonChars", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#getCommonChars(s1:String,s2:String,halfLen:Int):String", "kind" : "def"}, {"label" : "minStartPrefix", "tail" : "(s1: String, s2: String, minPrefixLen: Int): Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.minStartPrefix", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#minStartPrefix(s1:String,s2:String,minPrefixLen:Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/JaroImpl.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.impl.LevenshteinDistanceImpl", "members_trait" : [{"label" : "damerauLevenshtein", "tail" : "(a: String, b: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LevenshteinDistanceImpl.damerauLevenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#damerauLevenshtein(a:String,b:String):Int", "kind" : "def"}, {"label" : "levenshtein", "tail" : "(a: String, b: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LevenshteinDistanceImpl.levenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#levenshtein(a:String,b:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/LevenshteinDistanceImpl.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.impl.LinearGap", "shortDescription" : "", "members_case class" : [{"label" : "min", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.LinearGap.min", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#min:Double", "kind" : "def"}, {"label" : "max", "tail" : "(): Double", "member" : "com.github.vickumar1981.stringdistance.impl.LinearGap.max", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#max:Double", "kind" : "def"}, {"label" : "value", "tail" : "(fromIndex: Double, toIndex: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.LinearGap.value", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#value(fromIndex:Double,toIndex:Double):Double", "kind" : "def"}, {"member" : "com.github.vickumar1981.stringdistance.impl.LinearGap#<init>", "error" : "unsupported entity"}, {"label" : "gapValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.LinearGap.gapValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#gapValue:Double", "kind" : "val"}, {"label" : "misMatchValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.LinearGap.misMatchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#misMatchValue:Double", "kind" : "val"}, {"label" : "matchValue", "tail" : ": Double", "member" : "com.github.vickumar1981.stringdistance.impl.LinearGap.matchValue", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#matchValue:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/vickumar1981\/stringdistance\/impl\/LinearGap.html", "kind" : "case class"}, {"name" : "com.github.vickumar1981.stringdistance.impl.LongestCommonSeqImpl", "members_trait" : [{"label" : "longestCommonSeq", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LongestCommonSeqImpl.longestCommonSeq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#longestCommonSeq(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/LongestCommonSeqImpl.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.impl.NeedlemanWunschImpl", "members_trait" : [{"label" : "needleman", "tail" : "(s1: String, s2: String, gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.NeedlemanWunschImpl.needleman", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#needleman(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "subst", "tail" : "(a: String, aIndex: Int, b: String, bIndex: Int, gap: Gap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.GapSubstitution.subst", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#subst(a:String,aIndex:Int,b:String,bIndex:Int,gap:com.github.vickumar1981.stringdistance.impl.Gap):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/NeedlemanWunschImpl.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.impl.NGramImpl", "members_trait" : [{"label" : "nGramDist", "tail" : "(s1: String, s2: String, n: Int): Int", "member" : "com.github.vickumar1981.stringdistance.impl.NGramImpl.nGramDist", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#nGramDist(s1:String,s2:String,n:Int):Int", "kind" : "def"}, {"label" : "nGram", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.NGramImpl.nGram", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#nGram(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: String, s2: String, n: Int)(err: ⇒ T)(success: (Int) ⇒ T)(fuzzy: (Seq[String], Seq[String], Int) ⇒ T): T", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#foldNGram[T](s1:String,s2:String,n:Int)(err:=>T)(success:Int=>T)(fuzzy:(Seq[String],Seq[String],Int)=>T):T", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: String, n: Int): Array[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#tokenizeNGram(a:String,n:Int):Array[String]", "kind" : "def"}, {"label" : "intersectLength", "tail" : ": (Array[String], Array[String]) ⇒ Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#intersectLength:(Array[String],Array[String])=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/NGramImpl.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.impl.OverlapImpl", "members_trait" : [{"label" : "overlap", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.OverlapImpl.overlap", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#overlap(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: String, s2: String, n: Int)(err: ⇒ T)(success: (Int) ⇒ T)(fuzzy: (Seq[String], Seq[String], Int) ⇒ T): T", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#foldNGram[T](s1:String,s2:String,n:Int)(err:=>T)(success:Int=>T)(fuzzy:(Seq[String],Seq[String],Int)=>T):T", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: String, n: Int): Array[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#tokenizeNGram(a:String,n:Int):Array[String]", "kind" : "def"}, {"label" : "intersectLength", "tail" : ": (Array[String], Array[String]) ⇒ Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#intersectLength:(Array[String],Array[String])=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/OverlapImpl.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.impl.SmithWatermanImpl", "members_trait" : [{"label" : "smithWatermanGotoh", "tail" : "(s1: String, s2: String, gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.SmithWatermanImpl.smithWatermanGotoh", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#smithWatermanGotoh(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "smithWaterman", "tail" : "(s1: String, s2: String, gap: Gap, windowSize: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.SmithWatermanImpl.smithWaterman", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#smithWaterman(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.Gap,windowSize:Int):Double", "kind" : "def"}, {"label" : "subst", "tail" : "(a: String, aIndex: Int, b: String, bIndex: Int, gap: Gap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.GapSubstitution.subst", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#subst(a:String,aIndex:Int,b:String,bIndex:Int,gap:com.github.vickumar1981.stringdistance.impl.Gap):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/SmithWatermanImpl.html", "kind" : "trait"}], "com.github.vickumar1981.stringdistance.interfaces.sound" : [{"name" : "com.github.vickumar1981.stringdistance.interfaces.sound.CommonSoundAlgo", "shortDescription" : "", "object" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html", "members_object" : [{"label" : "isAlpha", "tail" : "(ch: Char): Boolean", "member" : "com.github.vickumar1981.stringdistance.interfaces.sound.CommonSoundAlgo.isAlpha", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#isAlpha(ch:Char):Boolean", "kind" : "def"}, {"label" : "lowercaseVowel", "tail" : ": Set[Char]", "member" : "com.github.vickumar1981.stringdistance.interfaces.sound.CommonSoundAlgo.lowercaseVowel", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#lowercaseVowel:Set[Char]", "kind" : "final val"}, {"label" : "alphabet", "tail" : ": Set[Char]", "member" : "com.github.vickumar1981.stringdistance.interfaces.sound.CommonSoundAlgo.alphabet", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#alphabet:Set[Char]", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/CommonSoundAlgo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.interfaces.sound.MetaphoneAlgo", "shortDescription" : "", "object" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html", "members_object" : [{"label" : "compute", "tail" : "(a: String): Option[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.sound.MetaphoneAlgo.compute", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#compute(a:String):Option[String]", "kind" : "def"}, {"label" : "compute", "tail" : "(a: Array[Char]): Option[Array[Char]]", "member" : "com.github.vickumar1981.stringdistance.interfaces.sound.MetaphoneAlgo.compute", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#compute(a:Array[Char]):Option[Array[Char]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/MetaphoneAlgo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.interfaces.sound.SoundexAlgo", "shortDescription" : "", "object" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html", "members_object" : [{"label" : "compute", "tail" : "(string: String): Option[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.sound.SoundexAlgo.compute", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#compute(string:String):Option[String]", "kind" : "def"}, {"label" : "compute", "tail" : "(a: Array[Char]): Option[Array[Char]]", "member" : "com.github.vickumar1981.stringdistance.interfaces.sound.SoundexAlgo.compute", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#compute(a:Array[Char]):Option[Array[Char]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/sound\/SoundexAlgo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.github.vickumar1981.stringdistance" : [{"name" : "com.github.vickumar1981.stringdistance.CosineAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the cosine similarity algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$CosineAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.CosineSimilarityImplWrapper", "shortDescription" : "Jave Wrapper for cosine similarity.", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.CosineSimilarityImplWrapper#<init>", "error" : "unsupported entity"}, {"label" : "cosSimilarity", "tail" : "(s1: String, s2: String, splitOn: String): Double", "member" : "com.github.vickumar1981.stringdistance.impl.CosSimilarityImpl.cosSimilarity", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#cosSimilarity(s1:String,s2:String,splitOn:String):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/CosineSimilarityImplWrapper.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.DamerauLevenshteinAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the damerau levenshtein distance algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$DamerauLevenshteinAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.DiceCoefficientAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the dice coefficient algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$DiceCoefficientAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.DiceCoefficientImplWrapper", "shortDescription" : "Jave Wrapper for dice coefficient similarity.", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.DiceCoefficientImplWrapper#<init>", "error" : "unsupported entity"}, {"label" : "diceCoefficient", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.impl.DiceCoefficientImpl.diceCoefficient", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#diceCoefficient(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/DiceCoefficientImplWrapper.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.DistanceAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "distance", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.DistanceAlgorithm.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html#distance(s1:String,s2:String):Int", "kind" : "abstract def"}], "shortDescription" : "A type class to extend a distance method to StringMetricAlgorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$DistanceAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.HammingAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the hamming distance algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$HammingAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.HammingImplWrapper", "shortDescription" : "Jave Wrapper for hamming distance.", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.HammingImplWrapper#<init>", "error" : "unsupported entity"}, {"label" : "hamming", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.HammingImpl.hamming", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#hamming(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/HammingImplWrapper.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.JaccardAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for a jaccard similarity algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$JaccardAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.JaccardImplWrapper", "shortDescription" : "Jave Wrapper for jaccard similarity.", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.JaccardImplWrapper#<init>", "error" : "unsupported entity"}, {"label" : "tversky", "tail" : "(s1: String, s2: String, n: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaccardImpl.tversky", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#tversky(s1:String,s2:String,n:Double):Double", "kind" : "def"}, {"label" : "jaccard", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaccardImpl.jaccard", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#jaccard(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: String, s2: String, n: Int)(err: ⇒ T)(success: (Int) ⇒ T)(fuzzy: (Seq[String], Seq[String], Int) ⇒ T): T", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#foldNGram[T](s1:String,s2:String,n:Int)(err:=>T)(success:Int=>T)(fuzzy:(Seq[String],Seq[String],Int)=>T):T", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: String, n: Int): Array[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#tokenizeNGram(a:String,n:Int):Array[String]", "kind" : "def"}, {"label" : "intersectLength", "tail" : ": (Array[String], Array[String]) ⇒ Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#intersectLength:(Array[String],Array[String])=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/JaccardImplWrapper.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.JaroAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the jaro similarity algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.JaroImplWrapper", "shortDescription" : "Jave Wrapper for jaro and jaro winkler similarity.", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.JaroImplWrapper#<init>", "error" : "unsupported entity"}, {"label" : "jaro", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaroImpl.jaro", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#jaro(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "jaroWinkler", "tail" : "(s1: String, s2: String, weight: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaroImpl.jaroWinkler", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#jaroWinkler(s1:String,s2:String,weight:Double):Double", "kind" : "def"}, {"label" : "getCommonChars", "tail" : "(s1: String, s2: String, halfLen: Int): String", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.getCommonChars", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#getCommonChars(s1:String,s2:String,halfLen:Int):String", "kind" : "def"}, {"label" : "minStartPrefix", "tail" : "(s1: String, s2: String, minPrefixLen: Int): Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.minStartPrefix", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#minStartPrefix(s1:String,s2:String,minPrefixLen:Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/JaroImplWrapper.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.JaroWinklerAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the jaro winkler algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$JaroWinklerAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.LevenshteinAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the levenshtein distance algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$LevenshteinAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.LevenshteinDistanceImplWrapper", "shortDescription" : "Jave Wrapper for levenshtein distance.", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.LevenshteinDistanceImplWrapper#<init>", "error" : "unsupported entity"}, {"label" : "damerauLevenshtein", "tail" : "(a: String, b: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LevenshteinDistanceImpl.damerauLevenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#damerauLevenshtein(a:String,b:String):Int", "kind" : "def"}, {"label" : "levenshtein", "tail" : "(a: String, b: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LevenshteinDistanceImpl.levenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#levenshtein(a:String,b:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/LevenshteinDistanceImplWrapper.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.LongestCommonSeqAlorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the longest common subsequence algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$LongestCommonSeqAlorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.LongestCommonSeqWrapper", "shortDescription" : "Jave Wrapper for longest comment sequence.", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.LongestCommonSeqWrapper#<init>", "error" : "unsupported entity"}, {"label" : "longestCommonSeq", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LongestCommonSeqImpl.longestCommonSeq", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#longestCommonSeq(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/LongestCommonSeqWrapper.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.MetaphoneAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the metaphone algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$MetaphoneAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.MetaphoneImplWrapper", "shortDescription" : "Jave Wrapper for metaphone similarity.", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.MetaphoneImplWrapper#<init>", "error" : "unsupported entity"}, {"label" : "metaphone", "tail" : "(s1: String, s2: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.impl.sound.MetaphoneImpl.metaphone", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#metaphone(s1:String,s2:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/MetaphoneImplWrapper.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.NeedlemanWunschAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the needleman wunsch similarity algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$NeedlemanWunschAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.NeedlemanWunschImplWrapper", "shortDescription" : "Jave Wrapper for needleman wunsch similarity.", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.NeedlemanWunschImplWrapper#<init>", "error" : "unsupported entity"}, {"label" : "needleman", "tail" : "(s1: String, s2: String, gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.NeedlemanWunschImpl.needleman", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#needleman(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "subst", "tail" : "(a: String, aIndex: Int, b: String, bIndex: Int, gap: Gap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.GapSubstitution.subst", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#subst(a:String,aIndex:Int,b:String,bIndex:Int,gap:com.github.vickumar1981.stringdistance.impl.Gap):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/NeedlemanWunschImplWrapper.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.NGramAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the n-gram similarity algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$NGramAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.NGramImplWrapper", "shortDescription" : "Jave Wrapper for n-gram similarity.", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.NGramImplWrapper#<init>", "error" : "unsupported entity"}, {"label" : "nGramDist", "tail" : "(s1: String, s2: String, n: Int): Int", "member" : "com.github.vickumar1981.stringdistance.impl.NGramImpl.nGramDist", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#nGramDist(s1:String,s2:String,n:Int):Int", "kind" : "def"}, {"label" : "nGram", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.NGramImpl.nGram", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#nGram(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: String, s2: String, n: Int)(err: ⇒ T)(success: (Int) ⇒ T)(fuzzy: (Seq[String], Seq[String], Int) ⇒ T): T", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#foldNGram[T](s1:String,s2:String,n:Int)(err:=>T)(success:Int=>T)(fuzzy:(Seq[String],Seq[String],Int)=>T):T", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: String, n: Int): Array[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#tokenizeNGram(a:String,n:Int):Array[String]", "kind" : "def"}, {"label" : "intersectLength", "tail" : ": (Array[String], Array[String]) ⇒ Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#intersectLength:(Array[String],Array[String])=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/NGramImplWrapper.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.OverlapAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the overlap similarity algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$OverlapAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.OverlapImplWrapper", "shortDescription" : "Jave Wrapper for overlap similarity.", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.OverlapImplWrapper#<init>", "error" : "unsupported entity"}, {"label" : "overlap", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.OverlapImpl.overlap", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#overlap(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: String, s2: String, n: Int)(err: ⇒ T)(success: (Int) ⇒ T)(fuzzy: (Seq[String], Seq[String], Int) ⇒ T): T", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#foldNGram[T](s1:String,s2:String,n:Int)(err:=>T)(success:Int=>T)(fuzzy:(Seq[String],Seq[String],Int)=>T):T", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: String, n: Int): Array[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#tokenizeNGram(a:String,n:Int):Array[String]", "kind" : "def"}, {"label" : "intersectLength", "tail" : ": (Array[String], Array[String]) ⇒ Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#intersectLength:(Array[String],Array[String])=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/OverlapImplWrapper.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.ScorableFromDistance", "members_trait" : [{"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.ScorableFromDistance.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A mix-in trait to extend a score method using the distance methodto StringMetricAlgorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$ScorableFromDistance.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.ScoringAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.ScoringAlgorithm.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html#score(s1:String,s2:String):Double", "kind" : "abstract def"}], "shortDescription" : "A type class to extend a score method to StringMetricAlgorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$ScoringAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.SmithWatermanAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the smith waterman similarity algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.SmithWatermanGotohAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the smith waterman gotoh similarity algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$SmithWatermanGotohAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.SmithWatermanImplWrapper", "shortDescription" : "Jave Wrapper for smith waterman similarity.", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.SmithWatermanImplWrapper#<init>", "error" : "unsupported entity"}, {"label" : "smithWatermanGotoh", "tail" : "(s1: String, s2: String, gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.SmithWatermanImpl.smithWatermanGotoh", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#smithWatermanGotoh(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "smithWaterman", "tail" : "(s1: String, s2: String, gap: Gap, windowSize: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.SmithWatermanImpl.smithWaterman", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#smithWaterman(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.Gap,windowSize:Int):Double", "kind" : "def"}, {"label" : "subst", "tail" : "(a: String, aIndex: Int, b: String, bIndex: Int, gap: Gap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.GapSubstitution.subst", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#subst(a:String,aIndex:Int,b:String,bIndex:Int,gap:com.github.vickumar1981.stringdistance.impl.Gap):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/SmithWatermanImplWrapper.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.SoundexAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the soundex similarity algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundexAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.SoundexImplWrapper", "shortDescription" : "Jave Wrapper for soundex similarity.", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.SoundexImplWrapper#<init>", "error" : "unsupported entity"}, {"label" : "soundex", "tail" : "(a: String, b: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.impl.sound.SoundexImpl.soundex", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#soundex(a:String,b:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/SoundexImplWrapper.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.SoundScoringAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "score", "tail" : "(s1: String, s2: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.SoundScoringAlgorithm.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html#score(s1:String,s2:String):Boolean", "kind" : "abstract def"}], "shortDescription" : "A type class to extend a sound score method to StringMetricAlgorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$SoundScoringAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.Strategy", "shortDescription" : "The Strategy object has two strategies(reg ex) expressions on which to split input.", "object" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html", "members_object" : [{"label" : "splitSentence", "tail" : ": String", "member" : "com.github.vickumar1981.stringdistance.Strategy.splitSentence", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#splitSentence:String", "kind" : "final lazy val"}, {"label" : "splitWord", "tail" : ": String", "member" : "com.github.vickumar1981.stringdistance.Strategy.splitWord", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#splitWord:String", "kind" : "final lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$Strategy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.StringConverter", "shortDescription" : "Object to extend operations to the String class.", "object" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html", "members_object" : [{"label" : "StringToStringDistanceConverter", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringConverter.StringToStringDistanceConverter", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#StringToStringDistanceConverterextendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringConverter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.StringDistance", "shortDescription" : "Main class to organize functionality of different string distance algorithms", "object" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html", "members_object" : [{"label" : "Tversky", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Tversky", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Tversky", "kind" : "object"}, {"label" : "SmithWatermanGotoh", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.SmithWatermanGotoh", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#SmithWatermanGotoh", "kind" : "object"}, {"label" : "SmithWaterman", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.SmithWaterman", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#SmithWaterman", "kind" : "object"}, {"label" : "Overlap", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Overlap", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Overlap", "kind" : "object"}, {"label" : "NGram", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.NGram", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#NGram", "kind" : "object"}, {"label" : "NeedlemanWunsch", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.NeedlemanWunsch", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#NeedlemanWunsch", "kind" : "object"}, {"label" : "LongestCommonSeq", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.LongestCommonSeq", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#LongestCommonSeq", "kind" : "object"}, {"label" : "Levenshtein", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Levenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Levenshtein", "kind" : "object"}, {"label" : "JaroWinkler", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.JaroWinkler", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#JaroWinkler", "kind" : "object"}, {"label" : "Jaro", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Jaro", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Jaro", "kind" : "object"}, {"label" : "Jaccard", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Jaccard", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Jaccard", "kind" : "object"}, {"label" : "Hamming", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Hamming", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Hamming", "kind" : "object"}, {"label" : "DiceCoefficient", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.DiceCoefficient", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#DiceCoefficient", "kind" : "object"}, {"label" : "Damerau", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Damerau", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Damerau", "kind" : "object"}, {"label" : "Cosine", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringDistance.Cosine", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#Cosine", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/StringDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.StringMetric", "members_trait" : [{"label" : "score", "tail" : "(s1: String, s2: String)(algo: ScoringAlgorithm[A]): Double", "member" : "com.github.vickumar1981.stringdistance.StringMetric.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#score(s1:String,s2:String)(implicitalgo:com.github.vickumar1981.stringdistance.package.ScoringAlgorithm[A]):Double", "kind" : "def"}, {"label" : "distance", "tail" : "(s1: String, s2: String)(algo: DistanceAlgorithm[A]): Int", "member" : "com.github.vickumar1981.stringdistance.StringMetric.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#distance(s1:String,s2:String)(implicitalgo:com.github.vickumar1981.stringdistance.package.DistanceAlgorithm[A]):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Defines implementation for StringMetricAlgorithm by addingimplicit definitions from DistanceAlgorithm, ScoringAlgorithm,WeightedDistanceAlgorithm, or WeightedScoringAlgorithm", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetric.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.StringMetricAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the string metric algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$StringMetricAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.StringSound", "shortDescription" : "Main class to organize functionality of different phonetic\/sound string algorithms", "object" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html", "members_object" : [{"label" : "Soundex", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringSound.Soundex", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#Soundex", "kind" : "object"}, {"label" : "Metaphone", "tail" : "", "member" : "com.github.vickumar1981.stringdistance.StringSound.Metaphone", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#Metaphone", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/StringSound$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.StringSoundMetric", "members_trait" : [{"label" : "score", "tail" : "(s1: String, s2: String)(algo: SoundScoringAlgorithm[A]): Boolean", "member" : "com.github.vickumar1981.stringdistance.StringSoundMetric.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#score(s1:String,s2:String)(implicitalgo:com.github.vickumar1981.stringdistance.package.SoundScoringAlgorithm[A]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$StringSoundMetric.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.TverskyAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface for the tversky similarity algorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$TverskyAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.WeightedDistanceAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "distance", "tail" : "(s1: String, s2: String, weight: B): Int", "member" : "com.github.vickumar1981.stringdistance.WeightedDistanceAlgorithm.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html#distance(s1:String,s2:String,weight:B):Int", "kind" : "abstract def"}], "shortDescription" : "A type class to extend a distance method with a 2nd typed parameterto StringMetricAlgorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedDistanceAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.WeightedScoringAlgorithm", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "score", "tail" : "(s1: String, s2: String, weight: B): Double", "member" : "com.github.vickumar1981.stringdistance.WeightedScoringAlgorithm.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html#score(s1:String,s2:String,weight:B):Double", "kind" : "abstract def"}], "shortDescription" : "A type class to extend a score method with a 2nd typed parameterto StringMetricAlgorithm.", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedScoringAlgorithm.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.WeightedStringMetric", "members_trait" : [{"label" : "score", "tail" : "(s1: String, s2: String, weight: B)(algo: WeightedScoringAlgorithm[A, B]): Double", "member" : "com.github.vickumar1981.stringdistance.WeightedStringMetric.score", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#score(s1:String,s2:String,weight:B)(implicitalgo:com.github.vickumar1981.stringdistance.package.WeightedScoringAlgorithm[A,B]):Double", "kind" : "def"}, {"label" : "distance", "tail" : "(s1: String, s2: String, weight: B)(algo: WeightedDistanceAlgorithm[A, B]): Int", "member" : "com.github.vickumar1981.stringdistance.WeightedStringMetric.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#distance(s1:String,s2:String,weight:B)(implicitalgo:com.github.vickumar1981.stringdistance.package.WeightedDistanceAlgorithm[A,B]):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/package$$WeightedStringMetric.html", "kind" : "trait"}], "com.github.vickumar1981.stringdistance.implicits" : [{"name" : "com.github.vickumar1981.stringdistance.implicits.CosSimilarityScore", "shortDescription" : "Implicit definition of cosine similarity score for CosineAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String, splitOn: String): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.CosSimilarityScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#score(s1:String,s2:String,splitOn:String):Double", "kind" : "def"}, {"label" : "cosSimilarity", "tail" : "(s1: String, s2: String, splitOn: String): Double", "member" : "com.github.vickumar1981.stringdistance.impl.CosSimilarityImpl.cosSimilarity", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#cosSimilarity(s1:String,s2:String,splitOn:String):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$CosSimilarityScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.DamerauLevenshteinDistance", "shortDescription" : "Implicit definition of damerau levenshtein distance for DamerauLevenshteinAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html", "members_object" : [{"label" : "distance", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.implicits.DamerauLevenshteinDistance.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#distance(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.ScorableFromDistance.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "damerauLevenshtein", "tail" : "(a: String, b: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LevenshteinDistanceImpl.damerauLevenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#damerauLevenshtein(a:String,b:String):Int", "kind" : "def"}, {"label" : "levenshtein", "tail" : "(a: String, b: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LevenshteinDistanceImpl.levenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#levenshtein(a:String,b:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DamerauLevenshteinDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.DiceCoefficientScore", "shortDescription" : "Implicit definition of dice coefficient score for DiceCoefficientAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.DiceCoefficientScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "diceCoefficient", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.impl.DiceCoefficientImpl.diceCoefficient", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#diceCoefficient(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$DiceCoefficientScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.HammingDistance", "shortDescription" : "Implicit definition of hamming distance for HammingAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html", "members_object" : [{"label" : "distance", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.implicits.HammingDistance.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#distance(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.ScorableFromDistance.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "hamming", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.HammingImpl.hamming", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#hamming(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$HammingDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.JaccardScore", "shortDescription" : "Implicit definition of jaccard score for JaccardAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.JaccardScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#score(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "tversky", "tail" : "(s1: String, s2: String, n: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaccardImpl.tversky", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#tversky(s1:String,s2:String,n:Double):Double", "kind" : "def"}, {"label" : "jaccard", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaccardImpl.jaccard", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#jaccard(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: String, s2: String, n: Int)(err: ⇒ T)(success: (Int) ⇒ T)(fuzzy: (Seq[String], Seq[String], Int) ⇒ T): T", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#foldNGram[T](s1:String,s2:String,n:Int)(err:=>T)(success:Int=>T)(fuzzy:(Seq[String],Seq[String],Int)=>T):T", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: String, n: Int): Array[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#tokenizeNGram(a:String,n:Int):Array[String]", "kind" : "def"}, {"label" : "intersectLength", "tail" : ": (Array[String], Array[String]) ⇒ Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#intersectLength:(Array[String],Array[String])=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaccardScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.JaroScore", "shortDescription" : "Implicit definition of jaro score for JaroAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.JaroScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "jaro", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaroImpl.jaro", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#jaro(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "jaroWinkler", "tail" : "(s1: String, s2: String, weight: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaroImpl.jaroWinkler", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#jaroWinkler(s1:String,s2:String,weight:Double):Double", "kind" : "def"}, {"label" : "getCommonChars", "tail" : "(s1: String, s2: String, halfLen: Int): String", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.getCommonChars", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#getCommonChars(s1:String,s2:String,halfLen:Int):String", "kind" : "def"}, {"label" : "minStartPrefix", "tail" : "(s1: String, s2: String, minPrefixLen: Int): Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.minStartPrefix", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#minStartPrefix(s1:String,s2:String,minPrefixLen:Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.JaroWinklerScore", "shortDescription" : "Implicit definition of jaro winkler score for JaroWinklerAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String, weight: Double): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.JaroWinklerScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#score(s1:String,s2:String,weight:Double):Double", "kind" : "def"}, {"label" : "jaro", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaroImpl.jaro", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#jaro(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "jaroWinkler", "tail" : "(s1: String, s2: String, weight: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaroImpl.jaroWinkler", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#jaroWinkler(s1:String,s2:String,weight:Double):Double", "kind" : "def"}, {"label" : "getCommonChars", "tail" : "(s1: String, s2: String, halfLen: Int): String", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.getCommonChars", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#getCommonChars(s1:String,s2:String,halfLen:Int):String", "kind" : "def"}, {"label" : "minStartPrefix", "tail" : "(s1: String, s2: String, minPrefixLen: Int): Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.minStartPrefix", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#minStartPrefix(s1:String,s2:String,minPrefixLen:Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$JaroWinklerScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.LevenshteinDistance", "shortDescription" : "Implicit definition of levenshtein distance for LevenshteinAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html", "members_object" : [{"label" : "distance", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.implicits.LevenshteinDistance.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#distance(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "score", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.ScorableFromDistance.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#score(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "damerauLevenshtein", "tail" : "(a: String, b: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LevenshteinDistanceImpl.damerauLevenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#damerauLevenshtein(a:String,b:String):Int", "kind" : "def"}, {"label" : "levenshtein", "tail" : "(a: String, b: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LevenshteinDistanceImpl.levenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#levenshtein(a:String,b:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LevenshteinDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.LongestCommonSeqDistance", "shortDescription" : "Implicit definition of longest common subsequence for CosineAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html", "members_object" : [{"label" : "distance", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.implicits.LongestCommonSeqDistance.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#distance(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "longestCommonSeq", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LongestCommonSeqImpl.longestCommonSeq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#longestCommonSeq(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$LongestCommonSeqDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.MetaphoneScore", "shortDescription" : "Implicit definition of metaphone score for MetaphoneAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.implicits.MetaphoneScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#score(s1:String,s2:String):Boolean", "kind" : "def"}, {"label" : "metaphone", "tail" : "(s1: String, s2: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.impl.sound.MetaphoneImpl.metaphone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#metaphone(s1:String,s2:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$MetaphoneScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.NeedlemanWunschScore", "shortDescription" : "Implicit definition of needleman wunsch score for NeedlemanWunschAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String, gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.NeedlemanWunschScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#score(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "needleman", "tail" : "(s1: String, s2: String, gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.NeedlemanWunschImpl.needleman", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#needleman(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "subst", "tail" : "(a: String, aIndex: Int, b: String, bIndex: Int, gap: Gap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.GapSubstitution.subst", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#subst(a:String,aIndex:Int,b:String,bIndex:Int,gap:com.github.vickumar1981.stringdistance.impl.Gap):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NeedlemanWunschScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.NGramDistance", "shortDescription" : "Implicit definition of n-gram distance for NGramAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html", "members_object" : [{"label" : "distance", "tail" : "(s1: String, s2: String, n: Int): Int", "member" : "com.github.vickumar1981.stringdistance.implicits.NGramDistance.distance", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#distance(s1:String,s2:String,n:Int):Int", "kind" : "def"}, {"label" : "nGramDist", "tail" : "(s1: String, s2: String, n: Int): Int", "member" : "com.github.vickumar1981.stringdistance.impl.NGramImpl.nGramDist", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#nGramDist(s1:String,s2:String,n:Int):Int", "kind" : "def"}, {"label" : "nGram", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.NGramImpl.nGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#nGram(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: String, s2: String, n: Int)(err: ⇒ T)(success: (Int) ⇒ T)(fuzzy: (Seq[String], Seq[String], Int) ⇒ T): T", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#foldNGram[T](s1:String,s2:String,n:Int)(err:=>T)(success:Int=>T)(fuzzy:(Seq[String],Seq[String],Int)=>T):T", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: String, n: Int): Array[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#tokenizeNGram(a:String,n:Int):Array[String]", "kind" : "def"}, {"label" : "intersectLength", "tail" : ": (Array[String], Array[String]) ⇒ Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#intersectLength:(Array[String],Array[String])=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.NGramScore", "shortDescription" : "Implicit definition of n-gram score for NGramAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.NGramScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#score(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "nGramDist", "tail" : "(s1: String, s2: String, n: Int): Int", "member" : "com.github.vickumar1981.stringdistance.impl.NGramImpl.nGramDist", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#nGramDist(s1:String,s2:String,n:Int):Int", "kind" : "def"}, {"label" : "nGram", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.NGramImpl.nGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#nGram(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: String, s2: String, n: Int)(err: ⇒ T)(success: (Int) ⇒ T)(fuzzy: (Seq[String], Seq[String], Int) ⇒ T): T", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#foldNGram[T](s1:String,s2:String,n:Int)(err:=>T)(success:Int=>T)(fuzzy:(Seq[String],Seq[String],Int)=>T):T", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: String, n: Int): Array[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#tokenizeNGram(a:String,n:Int):Array[String]", "kind" : "def"}, {"label" : "intersectLength", "tail" : ": (Array[String], Array[String]) ⇒ Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#intersectLength:(Array[String],Array[String])=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$NGramScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.OverlapScore", "shortDescription" : "Implicit definition of overlap score for OverlapAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.OverlapScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#score(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "overlap", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.OverlapImpl.overlap", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#overlap(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: String, s2: String, n: Int)(err: ⇒ T)(success: (Int) ⇒ T)(fuzzy: (Seq[String], Seq[String], Int) ⇒ T): T", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#foldNGram[T](s1:String,s2:String,n:Int)(err:=>T)(success:Int=>T)(fuzzy:(Seq[String],Seq[String],Int)=>T):T", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: String, n: Int): Array[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#tokenizeNGram(a:String,n:Int):Array[String]", "kind" : "def"}, {"label" : "intersectLength", "tail" : ": (Array[String], Array[String]) ⇒ Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#intersectLength:(Array[String],Array[String])=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$OverlapScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.SmithWatermanGotohScore", "shortDescription" : "Implicit definition of smith waterman gotoh score for SmithWatermanGotohAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String, gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.SmithWatermanGotohScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#score(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "smithWatermanGotoh", "tail" : "(s1: String, s2: String, gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.SmithWatermanImpl.smithWatermanGotoh", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#smithWatermanGotoh(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "smithWaterman", "tail" : "(s1: String, s2: String, gap: Gap, windowSize: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.SmithWatermanImpl.smithWaterman", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#smithWaterman(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.Gap,windowSize:Int):Double", "kind" : "def"}, {"label" : "subst", "tail" : "(a: String, aIndex: Int, b: String, bIndex: Int, gap: Gap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.GapSubstitution.subst", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#subst(a:String,aIndex:Int,b:String,bIndex:Int,gap:com.github.vickumar1981.stringdistance.impl.Gap):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanGotohScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.SmithWatermanScore", "shortDescription" : "Implicit definition of smith waterman score for SmithWatermanAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String, gapAndWindowSize: (Gap, Int)): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.SmithWatermanScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#score(s1:String,s2:String,gapAndWindowSize:(com.github.vickumar1981.stringdistance.impl.Gap,Int)):Double", "kind" : "def"}, {"label" : "smithWatermanGotoh", "tail" : "(s1: String, s2: String, gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.SmithWatermanImpl.smithWatermanGotoh", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#smithWatermanGotoh(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "smithWaterman", "tail" : "(s1: String, s2: String, gap: Gap, windowSize: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.SmithWatermanImpl.smithWaterman", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#smithWaterman(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.Gap,windowSize:Int):Double", "kind" : "def"}, {"label" : "subst", "tail" : "(a: String, aIndex: Int, b: String, bIndex: Int, gap: Gap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.GapSubstitution.subst", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#subst(a:String,aIndex:Int,b:String,bIndex:Int,gap:com.github.vickumar1981.stringdistance.impl.Gap):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SmithWatermanScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.SoundexScore", "shortDescription" : "Implicit definition of soundex score for SoundexAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.implicits.SoundexScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#score(s1:String,s2:String):Boolean", "kind" : "def"}, {"label" : "soundex", "tail" : "(a: String, b: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.impl.sound.SoundexImpl.soundex", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#soundex(a:String,b:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$SoundexScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.vickumar1981.stringdistance.implicits.TverskyScore", "shortDescription" : "Implicit definition of tversky score for TverskyAlgorithm.", "object" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html", "members_object" : [{"label" : "score", "tail" : "(s1: String, s2: String, n: Double): Double", "member" : "com.github.vickumar1981.stringdistance.implicits.TverskyScore.score", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#score(s1:String,s2:String,n:Double):Double", "kind" : "def"}, {"label" : "tversky", "tail" : "(s1: String, s2: String, n: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaccardImpl.tversky", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#tversky(s1:String,s2:String,n:Double):Double", "kind" : "def"}, {"label" : "jaccard", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaccardImpl.jaccard", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#jaccard(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: String, s2: String, n: Int)(err: ⇒ T)(success: (Int) ⇒ T)(fuzzy: (Seq[String], Seq[String], Int) ⇒ T): T", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#foldNGram[T](s1:String,s2:String,n:Int)(err:=>T)(success:Int=>T)(fuzzy:(Seq[String],Seq[String],Int)=>T):T", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: String, n: Int): Array[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#tokenizeNGram(a:String,n:Int):Array[String]", "kind" : "def"}, {"label" : "intersectLength", "tail" : ": (Array[String], Array[String]) ⇒ Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#intersectLength:(Array[String],Array[String])=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/implicits\/package$$TverskyScore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.github.vickumar1981" : [], "com.github.vickumar1981.stringdistance.util" : [{"name" : "com.github.vickumar1981.stringdistance.util.CosSimilarityImpl", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.CosSimilarityImpl#<init>", "error" : "unsupported entity"}, {"label" : "cosSimilarity", "tail" : "(s1: String, s2: String, splitOn: String): Double", "member" : "com.github.vickumar1981.stringdistance.impl.CosSimilarityImpl.cosSimilarity", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#cosSimilarity(s1:String,s2:String,splitOn:String):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/CosSimilarityImpl.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.DiceCoefficientImpl", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.DiceCoefficientImpl#<init>", "error" : "unsupported entity"}, {"label" : "diceCoefficient", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.impl.DiceCoefficientImpl.diceCoefficient", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#diceCoefficient(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/DiceCoefficientImpl.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.HammingImpl", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.HammingImpl#<init>", "error" : "unsupported entity"}, {"label" : "hamming", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.HammingImpl.hamming", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#hamming(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/HammingImpl.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.JaccardImpl", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.JaccardImpl#<init>", "error" : "unsupported entity"}, {"label" : "tversky", "tail" : "(s1: String, s2: String, n: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaccardImpl.tversky", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#tversky(s1:String,s2:String,n:Double):Double", "kind" : "def"}, {"label" : "jaccard", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaccardImpl.jaccard", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#jaccard(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: String, s2: String, n: Int)(err: ⇒ T)(success: (Int) ⇒ T)(fuzzy: (Seq[String], Seq[String], Int) ⇒ T): T", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#foldNGram[T](s1:String,s2:String,n:Int)(err:=>T)(success:Int=>T)(fuzzy:(Seq[String],Seq[String],Int)=>T):T", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: String, n: Int): Array[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#tokenizeNGram(a:String,n:Int):Array[String]", "kind" : "def"}, {"label" : "intersectLength", "tail" : ": (Array[String], Array[String]) ⇒ Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#intersectLength:(Array[String],Array[String])=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/JaccardImpl.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.JaroImpl", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.JaroImpl#<init>", "error" : "unsupported entity"}, {"label" : "jaro", "tail" : "(s1: String, s2: String): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaroImpl.jaro", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#jaro(s1:String,s2:String):Double", "kind" : "def"}, {"label" : "jaroWinkler", "tail" : "(s1: String, s2: String, weight: Double): Double", "member" : "com.github.vickumar1981.stringdistance.impl.JaroImpl.jaroWinkler", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#jaroWinkler(s1:String,s2:String,weight:Double):Double", "kind" : "def"}, {"label" : "getCommonChars", "tail" : "(s1: String, s2: String, halfLen: Int): String", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.getCommonChars", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#getCommonChars(s1:String,s2:String,halfLen:Int):String", "kind" : "def"}, {"label" : "minStartPrefix", "tail" : "(s1: String, s2: String, minPrefixLen: Int): Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.minStartPrefix", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#minStartPrefix(s1:String,s2:String,minPrefixLen:Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/JaroImpl.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.LevenshteinDistanceImpl", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.LevenshteinDistanceImpl#<init>", "error" : "unsupported entity"}, {"label" : "damerauLevenshtein", "tail" : "(a: String, b: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LevenshteinDistanceImpl.damerauLevenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#damerauLevenshtein(a:String,b:String):Int", "kind" : "def"}, {"label" : "levenshtein", "tail" : "(a: String, b: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LevenshteinDistanceImpl.levenshtein", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#levenshtein(a:String,b:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/LevenshteinDistanceImpl.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.LongestCommonSeqImpl", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.LongestCommonSeqImpl#<init>", "error" : "unsupported entity"}, {"label" : "longestCommonSeq", "tail" : "(s1: String, s2: String): Int", "member" : "com.github.vickumar1981.stringdistance.impl.LongestCommonSeqImpl.longestCommonSeq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#longestCommonSeq(s1:String,s2:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/LongestCommonSeqImpl.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.MetaphoneImpl", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.MetaphoneImpl#<init>", "error" : "unsupported entity"}, {"label" : "metaphone", "tail" : "(s1: String, s2: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.impl.sound.MetaphoneImpl.metaphone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#metaphone(s1:String,s2:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/MetaphoneImpl.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.NeedlemanWunschImpl", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.NeedlemanWunschImpl#<init>", "error" : "unsupported entity"}, {"label" : "needleman", "tail" : "(s1: String, s2: String, gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.NeedlemanWunschImpl.needleman", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#needleman(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "subst", "tail" : "(a: String, aIndex: Int, b: String, bIndex: Int, gap: Gap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.GapSubstitution.subst", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#subst(a:String,aIndex:Int,b:String,bIndex:Int,gap:com.github.vickumar1981.stringdistance.impl.Gap):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/NeedlemanWunschImpl.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.NGramImpl", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.NGramImpl#<init>", "error" : "unsupported entity"}, {"label" : "nGramDist", "tail" : "(s1: String, s2: String, n: Int): Int", "member" : "com.github.vickumar1981.stringdistance.impl.NGramImpl.nGramDist", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#nGramDist(s1:String,s2:String,n:Int):Int", "kind" : "def"}, {"label" : "nGram", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.NGramImpl.nGram", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#nGram(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: String, s2: String, n: Int)(err: ⇒ T)(success: (Int) ⇒ T)(fuzzy: (Seq[String], Seq[String], Int) ⇒ T): T", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#foldNGram[T](s1:String,s2:String,n:Int)(err:=>T)(success:Int=>T)(fuzzy:(Seq[String],Seq[String],Int)=>T):T", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: String, n: Int): Array[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#tokenizeNGram(a:String,n:Int):Array[String]", "kind" : "def"}, {"label" : "intersectLength", "tail" : ": (Array[String], Array[String]) ⇒ Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#intersectLength:(Array[String],Array[String])=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/NGramImpl.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.OverlapImpl", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.OverlapImpl#<init>", "error" : "unsupported entity"}, {"label" : "overlap", "tail" : "(s1: String, s2: String, n: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.OverlapImpl.overlap", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#overlap(s1:String,s2:String,n:Int):Double", "kind" : "def"}, {"label" : "foldNGram", "tail" : "(s1: String, s2: String, n: Int)(err: ⇒ T)(success: (Int) ⇒ T)(fuzzy: (Seq[String], Seq[String], Int) ⇒ T): T", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#foldNGram[T](s1:String,s2:String,n:Int)(err:=>T)(success:Int=>T)(fuzzy:(Seq[String],Seq[String],Int)=>T):T", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: String, n: Int): Array[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#tokenizeNGram(a:String,n:Int):Array[String]", "kind" : "def"}, {"label" : "intersectLength", "tail" : ": (Array[String], Array[String]) ⇒ Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#intersectLength:(Array[String],Array[String])=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/OverlapImpl.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.SmithWatermanImpl", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.SmithWatermanImpl#<init>", "error" : "unsupported entity"}, {"label" : "smithWatermanGotoh", "tail" : "(s1: String, s2: String, gap: ConstantGap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.SmithWatermanImpl.smithWatermanGotoh", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#smithWatermanGotoh(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.ConstantGap):Double", "kind" : "def"}, {"label" : "smithWaterman", "tail" : "(s1: String, s2: String, gap: Gap, windowSize: Int): Double", "member" : "com.github.vickumar1981.stringdistance.impl.SmithWatermanImpl.smithWaterman", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#smithWaterman(s1:String,s2:String,gap:com.github.vickumar1981.stringdistance.impl.Gap,windowSize:Int):Double", "kind" : "def"}, {"label" : "subst", "tail" : "(a: String, aIndex: Int, b: String, bIndex: Int, gap: Gap): Double", "member" : "com.github.vickumar1981.stringdistance.impl.GapSubstitution.subst", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#subst(a:String,aIndex:Int,b:String,bIndex:Int,gap:com.github.vickumar1981.stringdistance.impl.Gap):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/SmithWatermanImpl.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.SoundexImpl", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.SoundexImpl#<init>", "error" : "unsupported entity"}, {"label" : "soundex", "tail" : "(a: String, b: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.impl.sound.SoundexImpl.soundex", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#soundex(a:String,b:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/SoundexImpl.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.StringDistance", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.StringDistance#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/StringDistance.html", "kind" : "class"}, {"name" : "com.github.vickumar1981.stringdistance.util.StringSound", "shortDescription" : "", "members_class" : [{"member" : "com.github.vickumar1981.stringdistance.util.StringSound#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/vickumar1981\/stringdistance\/util\/StringSound.html", "kind" : "class"}], "com.github.vickumar1981.stringdistance.impl.sound" : [{"name" : "com.github.vickumar1981.stringdistance.impl.sound.MetaphoneImpl", "members_trait" : [{"label" : "metaphone", "tail" : "(s1: String, s2: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.impl.sound.MetaphoneImpl.metaphone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#metaphone(s1:String,s2:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/MetaphoneImpl.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.impl.sound.SoundexImpl", "members_trait" : [{"label" : "soundex", "tail" : "(a: String, b: String): Boolean", "member" : "com.github.vickumar1981.stringdistance.impl.sound.SoundexImpl.soundex", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#soundex(a:String,b:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/impl\/sound\/SoundexImpl.html", "kind" : "trait"}], "com" : [], "com.github.vickumar1981.stringdistance.interfaces" : [{"name" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo", "members_trait" : [{"label" : "getCommonChars", "tail" : "(s1: String, s2: String, halfLen: Int): String", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.getCommonChars", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#getCommonChars(s1:String,s2:String,halfLen:Int):String", "kind" : "def"}, {"label" : "minStartPrefix", "tail" : "(s1: String, s2: String, minPrefixLen: Int): Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.CommonStringDistanceAlgo.minStartPrefix", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#minStartPrefix(s1:String,s2:String,minPrefixLen:Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/CommonStringDistanceAlgo.html", "kind" : "trait"}, {"name" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer", "members_trait" : [{"label" : "foldNGram", "tail" : "(s1: String, s2: String, n: Int)(err: ⇒ T)(success: (Int) ⇒ T)(fuzzy: (Seq[String], Seq[String], Int) ⇒ T): T", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.foldNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#foldNGram[T](s1:String,s2:String,n:Int)(err:=>T)(success:Int=>T)(fuzzy:(Seq[String],Seq[String],Int)=>T):T", "kind" : "def"}, {"label" : "tokenizeNGram", "tail" : "(a: String, n: Int): Array[String]", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.tokenizeNGram", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#tokenizeNGram(a:String,n:Int):Array[String]", "kind" : "def"}, {"label" : "intersectLength", "tail" : ": (Array[String], Array[String]) ⇒ Int", "member" : "com.github.vickumar1981.stringdistance.interfaces.NGramTokenizer.intersectLength", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#intersectLength:(Array[String],Array[String])=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/vickumar1981\/stringdistance\/interfaces\/NGramTokenizer.html", "kind" : "trait"}], "com.github" : []};